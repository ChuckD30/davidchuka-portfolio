# user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections  1024;
    accept_mutex off; # set to 'on' if nginx worker_processes > 1
}
http {
    resolver 8.8.8.8;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    # access_log  /var/log/nginx/access.log  main;
    sendfile        on;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #tcp_nopush     on;

    keepalive_timeout  65;

    #Compression
    # Enable Gzip compressed.
    gzip on;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and cpu usage, offering about
    # 75% reduction for most ascii files (almost identical to level 9).
    gzip_comp_level    5;

    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    gzip_min_length    256;

    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    gzip_proxied       any;

    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    gzip_vary          on;

    # Compress all output labeled with one of the following MIME-types.
    gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/schema+json
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-javascript
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/eot
    font/opentype
    image/bmp
    image/svg+xml
    image/vnd.microsoft.icon
    image/x-icon
    text/cache-manifest
    text/css
    text/javascript
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy
    text/xml;
    # text/html is always compressed by HttpGzipModule

    # This should be turned on if you are going to have pre-compressed copies (.gz) of
    # static files available. If not it should be left off as it will cause extra I/O
    # for the check. It is best if you enable this in a location{} block for
    # a specific directory, or on an individual server{} level.
    # gzip_static on;

    # limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    upstream django {
        server django:5000;
    }

    server {
        listen      80;
        listen [::]:80;
        server_name davidchuka.me www.davidchuka.me;

        location / {
            rewrite ^ https://www.$host$request_uri? permanent;
        }

        location ~ /.well-known/acme-challenge {
            allow all;
            root  /data/letsencrypt;
        }
    }

    server {
        listen      443           ssl http2;
        listen [::]:443           ssl http2;
        server_name               davidchuka.me www.davidchuka.me;

        add_header                Strict-Transport-Security "max-age=31536000" always;
        server_tokens off;
        ssl                       on;

        ssl_certificate           /etc/letsencrypt/live/davidchuka.me/fullchain.pem;
        ssl_certificate_key       /etc/letsencrypt/live/davidchuka.me/privkey.pem;

        ssl_buffer_size 8k;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;
        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4;

        access_log                /dev/stdout;
        error_log                 /dev/stderr info;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-SSL on;
            proxy_set_header X-Forwarded-Proto https;
            proxy_pass http://django$request_uri;
            proxy_ssl_session_reuse off;
            proxy_intercept_errors on;
            proxy_redirect off;
            add_header Access-Control-Allow-Origin "$http_origin";
        }

        location /static {
            alias /var/davidchuka_static; # your Django project's static files - amend as required
        }

        location /media {
            alias /var/davidchuka_media; # your Django project's static files - amend as required
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /etc/nginx/html;
        }
    }
}
